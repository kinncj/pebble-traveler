name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: watch-face/package-lock.json
        
    - name: Set up Conda
      uses: conda-incubator/setup-miniconda@v3
      with:
        python-version: '3.10'
        activate-environment: pebble-env
        environment-file: environment.yml
        auto-activate-base: false
    
    - name: Install Pebble SDK dependencies
      shell: bash -l {0}
      run: |
        conda activate pebble-env
        sudo apt-get update
        sudo apt-get install -y python3-pip python3-venv nodejs npm libsdl1.2debian libfdt1
        
    - name: Set up Pebble CLI
      shell: bash -l {0}
      run: |
        conda activate pebble-env
        # Install ARM toolchain
        sudo apt-get install -y gcc-arm-none-eabi build-essential

        # Install uv and use it to install pebble-tool per Rebble docs
        python3 -m pip install --user uv
        export PATH="$HOME/.local/bin:$PATH"
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        uv tool install pebble-tool
        
    - name: Install Node.js dependencies
      working-directory: ./watch-face
      shell: bash -l {0}
      run: |
        conda activate pebble-env
        npm ci
      
    - name: Build watch face
      working-directory: ./watch-face
      shell: bash -l {0}
      run: |
        conda activate pebble-env
        export PATH="$HOME/.local/bin:$PATH"
        pebble build
        
    - name: Package release artifacts
      working-directory: ./watch-face
      run: |
        # Create release directory
        mkdir -p ../release
        
        # Copy built packages
        cp build/*.pbw ../release/ 2>/dev/null || echo "No .pbw files found in build directory"
        find . -name "*.pbw" -exec cp {} ../release/ \;
        
        # Create archive with build artifacts
        tar -czf ../release/pebble-traveler-build-artifacts.tar.gz build/
        
        # List what we're releasing
        echo "Release contents:"
        ls -la ../release/
        
    - name: Extract tag name
      id: tag
      run: echo "tag_name=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.tag_name }}
        release_name: Timezone Traveler ${{ steps.tag.outputs.tag_name }}
        body: |
          ## Timezone Traveler ${{ steps.tag.outputs.tag_name }}
          
          ### Features
          - Multi-timezone support with GPS-based local time
          - Y-axis accelerometer navigation
          - Customizable colors and display options
          - Support for Pebble Time (basalt) and Pebble 2 HR (emery)
          
          ### Installation
          1. Download the appropriate .pbw file for your device
          2. Install using the Pebble app or pebble developer tools
          
          ### Files
          - `watch-face.pbw` - Main watch face package
          - `pebble-traveler-build-artifacts.tar.gz` - Complete build artifacts
          
        draft: false
        prerelease: false
        
    - name: Upload Release Assets
      run: |
        # Upload all .pbw files
        for file in release/*.pbw; do
          if [ -f "$file" ]; then
            echo "Uploading $(basename "$file")"
            curl \
              -X POST \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Content-Type: application/octet-stream" \
              --data-binary @"$file" \
              "${{ steps.create_release.outputs.upload_url }}?name=$(basename "$file")"
          fi
        done
        
        # Upload build artifacts archive
        if [ -f "release/pebble-traveler-build-artifacts.tar.gz" ]; then
          echo "Uploading build artifacts"
          curl \
            -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/gzip" \
            --data-binary @"release/pebble-traveler-build-artifacts.tar.gz" \
            "${{ steps.create_release.outputs.upload_url }}?name=pebble-traveler-build-artifacts.tar.gz"
        fi
